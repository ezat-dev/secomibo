<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="measure">


	<select id="getMeasureList" parameterType="measure"
		resultType="measure">
		SET LOCK_TIMEOUT 10000;
		SELECT 'T' + RIGHT('000000000' +
		CAST(TER_CODE AS nvarchar), 9) AS TER_BAR
		,TER_CODE
		,TER_NAME
		,TER_NO
		,TER_MODEL
		,TER_SN
		,TER_YONG
		,TER_KIND
		,TER_MAN1
		,TER_MAN2
		,TER_PLACE
		,TER_USE
		,TER_UBIGO
		,TER_BIGO
		,TER_MAKER
		,convert(varchar(10), TER_MDATE, 120) AS TER_MDATE
		,TER_BUY
		,convert(varchar(10), TER_BDATE, 120) AS TER_BDATE
		,TER_BMON
		,TER_NEXT_GUM
		,TER_END_GUM
		,TER_GUM
		,TER_V
		,TER_A TER_KW
		FROM TESTER WITH(NOLOCK)
	</select>


	<!-- 측정기기고장이력 -->
	<select id="getGigiGojangList" parameterType="measure"
		resultType="measure">
		SET LOCK_TIMEOUT 10000;
		SELECT TESTER_ERR_LIST.TERR_CODE, TESTER_ERR_LIST.TERR_NAME,
		TESTER_ERR_LIST.TERR_NAME, TESTER_ERR_LIST.TERR_DATE,
		TESTER_ERR_LIST.TERR_REWARD, TESTER_ERR_LIST.TERR_STRT,
		TESTER_ERR_LIST.TERR_END, TESTER_ERR_LIST.TERR_TIME,
		TESTER_ERR_LIST.TERR_MAN, TESTER_ERR_LIST.TERR_CONTENT,
		TESTER_ERR_LIST.TER_CODE, TESTER_ERR_LIST.TERR_COST
		FROM TESTER_ERR_LIST WITH(NOLOCK) INNER JOIN
		TESTER WITH(NOLOCK) ON TESTER_ERR_LIST.TER_CODE = TESTER.TER_CODE
		WHERE TESTER_ERR_LIST.TERR_DATE BETWEEN #{sdate} AND #{edate}
		ORDER BY TESTER_ERR_LIST.TERR_DATE
	</select>
	
	
	<select id="gigiGojangtDetail" parameterType="measure" resultType="measure">
		SET LOCK_TIMEOUT 10000;
        SELECT   TESTER_ERR_LIST.*,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_STRT, 121),12, 2),'00') AS TERR_STRT_H,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_STRT, 121),15, 2),'00') AS TERR_STRT_M,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_STRT, 121),18, 2),'00') AS TERR_STRT_S,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_END, 121),12, 2),'00') AS TERR_END_H,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_END, 121),15, 2),'00') AS TERR_END_M,
                 ISNULL(SUBSTRING(CONVERT(NVARCHAR, TESTER_ERR_LIST.TERR_END, 121),18, 2),'00') AS TERR_END_S
        FROM      TESTER_ERR_LIST WITH(NOLOCK)
                      INNER JOIN TESTER WITH(NOLOCK) ON TESTER_ERR_LIST.TER_CODE = TESTER.TER_CODE
        WHERE TESTER_ERR_LIST.TERR_CODE = #{terr_code}
	
	</select>

	<insert id="gigiGojangInsert" parameterType="measure">
		INSERT INTO TESTER_ERR_LIST (
        terr_name,
        terr_chkman,
        terr_reward,
        terr_strt,
        terr_end,
        terr_time,
        terr_content,
        terr_man,
        terr_cost,
        terr_suri,
        terr_bigo,
        terr_condi,
        terr_date,
        ter_code
    ) VALUES (
    	(SELECT ISNULL(MAX(TERR_CODE), 0) + 1 FROM TESTER_ERR_LIST),
        #{terr_name},
        #{terr_chkman},
        #{terr_reward},
        #{terr_strt},
        #{terr_end},
        #{terr_time},
        #{terr_content},
        #{terr_man},
        #{terr_cost},
        #{terr_suri},
        #{terr_bigo},
        #{terr_condi},
        #{terr_date},
        #{ter_code}
    )
	</insert>
	
	
	<update id="gigiGojangUdate" parameterType="measure">
    	SET LOCK_TIMEOUT 10000;
        UPDATE TESTER_ERR_LIST
        SET  TERR_NAME = #{terr_name}
          ,TERR_CHKMAN = #{terr_chkman}
          ,TERR_REWARD = #{terr_reward}
          ,TERR_STRT = #{terr_strt}
          ,TERR_END = #{terr_end}
          ,TERR_TIME = #{terr_time}
          ,TERR_CONTENT = #{terr_content}
          ,TERR_MAN = #{terr_man}
          ,TERR_COST = #{terr_cost}
          ,TERR_SURI = #{terr_suri}
          ,TERR_BIGO = #{terr_bigo}
          ,TERR_CONDI = #{terr_condi}
          ,TERR_DATE = #{terr_date}
          ,TER_CODE = #{ter_code}
        WHERE TERR_CODE = #{terr_code}
    </update>
	
	<delete id="gigiGojangDelete" parameterType="int">
        SET LOCK_TIMEOUT 10000;
        DELETE FROM TESTER_ERR_LIST WHERE TERR_CODE = #{terr_code}
    </delete>
	
	



	


	<insert id="measureInsertSave" parameterType="measure">
		SET LOCK_TIMEOUT
		10000;
		INSERT INTO TESTER
		(
		[TER_NAME],
		[TER_NO],
		[TER_MODEL],
		[TER_SN],
		[TER_YONG],
		[TER_KIND],
		[TER_MAN1],
		[TER_MAN2],
		[TER_PLACE],
		[TER_USE],
		[TER_UBIGO],
		[TER_BIGO],
		[TER_MAKER],
		[TER_MDATE],
		[TER_BUY],
		[TER_BDATE],
		[TER_BMON],
		[TER_GUM],
		[TER_V],
		[TER_A],
		[TER_KW],
		[TER_NEXT_GUM],
		[TER_END_GUM],
		[TER_FILE]
		)
		VALUES
		(
		#{ter_name},
		#{ter_no},
		#{ter_model},
		#{ter_sn},
		#{ter_yong},
		#{ter_kind},
		#{ter_man1},
		#{ter_man2},
		#{ter_place},
		#{ter_use},
		#{ter_ubigo},
		#{ter_bigo},
		#{ter_maker},
		#{ter_mdate},
		#{ter_buy},
		#{ter_bdate},
		#{ter_bmon},
		#{ter_gum},
		#{ter_v},
		#{ter_a},
		#{ter_kw},
		#{ter_next_gum},
		#{ter_end_gum},
		#{ter_file}
		)

	</insert>

	<update id="measureUpdateSave" parameterType="measure">
	SET LOCK_TIMEOUT 10000;
	UPDATE TESTER
	SET
	TER_NAME = #{ter_name},
	TER_MODEL = #{ter_model},
	TER_SN = #{ter_sn},
	TER_YONG = #{ter_yong},
	TER_KIND = #{ter_kind},
	TER_MAN1 = #{ter_man1},
	TER_MAN2 = #{ter_man2},
	TER_PLACE = #{ter_place},
	TER_USE = #{ter_use},
	TER_UBIGO = #{ter_ubigo},
	TER_BIGO = #{ter_bigo},
	TER_MAKER =
	#{ter_maker},
	TER_MDATE = #{ter_mdate},
	TER_BUY = #{ter_buy},
	TER_BDATE =
	#{ter_bdate},
	TER_BMON = #{ter_bmon},
	TER_GUM = #{ter_gum},
	TER_V =
	#{ter_v},
	TER_A = #{ter_a},
	TER_KW = #{ter_kw},
	TER_NEXT_GUM =
	#{ter_next_gum},
	TER_END_GUM = #{ter_end_gum},
	TER_FILE = #{ter_file}
	WHERE
	TER_NO = #{ter_no}

</update>


	<delete id="measureDelete" parameterType="int">
		DELETE FROM TESTER
		WHERE TER_CODE = #{ter_code}
	</delete>

	
	
	<!-- 측정기기점검관리 -->
	<select id="getGigiJeomgeomList" parameterType="measure"
		resultType="measure">
		select MCD.MCD_CD as MCD_CD
		, MCD.TER_CODE as TER_CODE
		, TT.TER_NAME as TER_NAME
		, MCD.MCD_CORRECTION_CYCLE as MCD_CORRECTION_CYCLE_NM
		, convert(varchar(10), MCD.MCD_INSPECTION_DATE, 120) as
		MCD_INSPECTION_DATE
		, MCD.MCD_NO as MCD_NO
		, MCD.MCD_MAN_NO as MCD_MAN_NO
		, MCD.MCD_CORRECTION_CYCLE as MCD_CORRECTION_CYCLE
		, convert(varchar(10), MCD.MCD_NEXT_DATE, 120) as MCD_NEXT_DATE
		, MCD.MCD_REPAIR_COMP as MCD_REPAIR_COMP
		, MCD.MCD_AVAILABLE_TERM as MCD_AVAILABLE_TERM
		, MCD.MCD_REPAIR_HISTORY as MCD_REPAIR_HISTORY
		, MCD.MCD_MANAGER_USER_CD as MCD_MANAGER_USER_CD
		, tu.USER_NAME as MCD_MANAGER_USER_NM
		, convert(varchar(10), MCD.MCD_REG_DT, 120) as MCD_REG_DT
		, MCD.MCD_REG_CD as MCD_REG_CD
		, rtu.USER_NAME as MCD_REG_NM
		, convert(varchar(10), MCD.MCD_MOD_DT, 120) as MCD_MOD_DT
		, MCD.MCD_MOD_CD as MCD_MOD_CD
		, mtu.USER_NAME as MCD_MOD_NM
		, MCD.MCD_FILE as MCD_FILE
		from MEASUREMENT_DEVICE_CEHCK MCD
		inner join TESTER TT on MCD.TER_CODE = TT.TER_CODE
		inner join USERT TU on MCD.MCD_MANAGER_USER_CD = TU.USER_CODE
		left outer join USERT RTU on RTU.USER_CODE = MCD.MCD_REG_CD
		left outer join USERT MTU on MTU.USER_CODE = MCD.MCD_MOD_CD
		where 1 = 1
		order by MCD_INSPECTION_DATE
	</select>
	
	
	<insert id="gigiJeomgeomInsertSave" parameterType="measure">
		<selectKey resultType="String" keyProperty="MCD_CD" order="BEFORE">
            SELECT ISNULL(MAX(CONVERT(int,MCD_CD)), 0)+1 FROM MEASUREMENT_DEVICE_CEHCK
        </selectKey>
        insert into MEASUREMENT_DEVICE_CEHCK(
        MCD_CD
        , TER_CODE
        , MCD_INSPECTION_DATE
        , MCD_NO
        , MCD_MAN_NO
        , MCD_CORRECTION_CYCLE
        , MCD_NEXT_DATE
        , MCD_REPAIR_COMP
        , MCD_MANAGER_USER_CD
        , MCD_AVAILABLE_TERM
        , MCD_REPAIR_HISTORY
        , MCD_FILE
        , MCD_REG_DT
        , MCD_REG_CD
        )
        values (
        #{mcd_cd}
        , #{req_s_tmd_cd}
        , #{req_s_tmcd_inspection_date}
        , #{req_s_tmcd_no}
        , #{req_s_tmcd_man_no}
        , #{req_s_tmcd_correction_cycle_select}
        , #{req_s_tmcd_next_date}
        , #{req_s_tmcd_repair_comp}
        , #{req_s_tmcd_manager_user_cd}
        , #{req_s_tmcd_available_term}
        , #{req_s_tmcd_repair_history}
        , <choose><when test=" req_s_tmcd_file != null and req_s_tmcd_file != '' "> #{req_s_tmcd_file} </when><otherwise> null </otherwise></choose>
        , GETDATE()
        , #{req_user_cd}
        )
	</insert>

	<update id="gigiJeomgeomUpdateSave" parameterType="measure">
	update MEASUREMENT_DEVICE_CEHCK
        set TER_CODE					= #{req_s_tmd_cd}
        , MCD_INSPECTION_DATE	= #{req_s_tmcd_inspection_date}
        , MCD_NO					= #{req_s_tmcd_no}
        , MCD_MAN_NO				= #{req_s_tmcd_man_no}
        , MCD_CORRECTION_CYCLE	= #{req_s_tmcd_correction_cycle_select}
        , MCD_NEXT_DATE			= #{req_s_tmcd_next_date}
        , MCD_REPAIR_COMP		= #{req_s_tmcd_repair_comp}
        , MCD_MANAGER_USER_CD	= #{req_s_tmcd_manager_user_cd}
        , MCD_AVAILABLE_TERM		= #{req_s_tmcd_available_term}
        , MCD_REPAIR_HISTORY		= #{req_s_tmcd_repair_history}
        , MCD_FILE				=  #{req_s_tmcd_file}
        , MCD_MOD_DT				= GETDATE()
        , MCD_MOD_CD				= #{req_user_cd}
        where MCD_CD = #{req_s_tmcd_cd}

</update>


	<delete id="gigiJeomgeomDelete" parameterType="int">
		delete from MEASUREMENT_DEVICE_CEHCK
        where MCD_CD = #{req_s_tmcd_cd}
	</delete>



</mapper>